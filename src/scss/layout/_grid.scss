.row{
    max-width: 114rem;
    margin:0 auto;

    &:not(:last-child){
        margin-bottom: $gutter-vertical;
    }

    @include clear-fix;

    [class^="col-"] {
        float: left;
        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2{
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3{
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3{
        width: calc(2 * (100% - 2 * #{$gutter-horizontal}) / 3 + #{$gutter-horizontal});
    }

    .col-1-of-4{
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4)
    }

    .col-2-of-4{
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal})
    }

    .col-3-of-4{
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal})
    }

}

// // Settings
// $grid: (
//   container: (
//     width: 1280,
//     gap: 30
//   ),
//   columns: (
//     max: 4,
//     gap: 130
//   ),
//   breakpoints: (
//     default: xs,
//     sm: 768,
//     md: 992,
//     lg: 1200
//   )
// );

// // Map deep get
// @function map-deep-get($map, $keys...) {
// 	@each $key in $keys {
// 		$map: map-get($map, $key);
// 	}
// 	@return $map;
// }

// $containerWidth: map-deep-get($grid, 'container', 'width');
// $containerGap: map-deep-get($grid, 'container', 'gap');
// $colMax: map-deep-get($grid, 'columns', 'max');
// $colGap: map-deep-get($grid, 'columns', 'gap');

// .container {
//   max-width: $containerWidth * 1px;
//   margin: auto;
// }
// .container-fluid {
//   width: 100%;
// }
// .container,
// .container-fluid {
//   padding-left: $containerGap * 1px;
//   padding-right: $containerGap * 1px;
// }
// .row {
//   margin-left: -($colGap / 2) * 1px;
//   margin-right: -($colGap / 2) * 1px;
//   &:after {
//     content: '';
//     display: table;
//     clear: both;
//   }
// }
// [class*="col-"] {
//   float: left;
//   padding-left: ($colGap / 2) * 1px;
//   padding-right: ($colGap / 2) * 1px;
// }

// @mixin column($nameCol) {
//   @for $i from 1 through $colMax {
//     .col-#{$nameCol}-#{$i} {
//       width: (100 * $i) / $colMax * 1%;
//     }
//   }
// }

// @each $key, $val in map-get($grid, 'breakpoints') {
//   @if ($key == 'default') {
//     $colDefault: map-deep-get($grid, 'breakpoints', 'default');
//     @include column($colDefault);
//   } @else {
//     @media (min-width: $val * 1px) {
//       @include column($key);
//     }
//   }
// }